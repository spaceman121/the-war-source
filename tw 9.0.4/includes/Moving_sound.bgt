class msound
{
string id,soundloop,map;
int x,y,z,loopint;
double pitch;

msound(string i, string l, int c1, int c2,int c3,string cm,double pi)
{
id=i;
soundloop=l;
x=c1;
y=c2;
z=c3;
pitch=pi;
if(cm==mapname) loopint=mpool.play_extended_3d(soundloop,me.x,me.y,me.z,x,y,z,calculate_theta(facing),0,0,0,0,0,0,true,0,0,0,pitch,false,true);
else loopint=-5;
this.map=cm;
}

void updateme(int c1, int c2,int c3,double pi)
{
x=c1;
y=c2;
z=c3;
if (loopint==-1) return;
if(mapname==this.map&&loopint==-5) loopint=mpool.play_extended_3d(soundloop,me.x,me.y,me.z,x,y,z,calculate_theta(facing),0,0,0,0,0,0,true,0,0,0,pitch,false,true);
if(mapname!=this.map&&loopint!=-5) mpool.pause_sound(loopint);
if(mapname==this.map&&loopint!=-5)
{
if(mpool.sound_is_active(loopint)==false) loopint=mpool.play_extended_3d(soundloop,me.x,me.y,me.z,x,y,z,calculate_theta(facing),0,0,0,0,0,0,true,0,0,0,pitch,false,true);
if(mpool.items[loopint].paused) mpool.resume_sound(loopint);
mpool.update_sound_3d(loopint,x,y,z);
if(pi!=pitch)
{
pitch=pi;
mpool.update_sound_start_values(loopint,0,0,pitch);
}
}
}
}
// class.

msound@[] msounds;
void createmsound(string id, string loop, int x, int y,int z,string map,double pitch)
{
msound m1(id,loop,x,y,z,map,pitch);
msounds.insert_last(m1);
}

void updatemsound(string id, int x, int y,int z,double pitch)
{
for(uint i=0; i<msounds.length; i++)
{
if(msounds[i].id==id) msounds[i].updateme(x,y,z,pitch);
}
}

void destroymsound(string id)
{
for(uint i=0; i<msounds.length; i++)
{
if(msounds[i].id==id)
{
mpool.destroy_sound(msounds[i].loopint);
msounds.remove_at(i);
continue;
}
}
}

void destroy_all_msounds()
{
for(uint i=0; i<msounds.length; i++)
{
destroymsound(msounds[i].id);
}
}

void msound_map_update()
{
for(uint i=0; i<msounds.length; i++)
{
msounds[i].updateme(msounds[i].x,msounds[i].y,msounds[i].z,msounds[i].pitch);
}
}
void msoundcheckloop()
{
for(uint i=0; i<msounds.length(); i++)
{
if(msounds[i].map==mapname and msounds[i].loopint!=-5)
{
bool dist=get_total_distance(me.x,me.y,me.z,msounds[i].x,msounds[i].y,msounds[i].z,75);
if(dist==false and mpool.sound_is_playing(msounds[i].loopint))
{
mpool.pause_sound(msounds[i].loopint);
}
if(dist==true and mpool.sound_is_playing(msounds[i].loopint)==false)
{
mpool.resume_sound(msounds[i].loopint);
}
}
}
}
