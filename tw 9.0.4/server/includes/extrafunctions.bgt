void extrafuncs()
{
if(file_exists("update.txt"))
{
file_delete("update.txt");
updatingsvr=true;
updatingtimer.restart();
}
}
void create_nvda_rem_key(string host, string key)
{
string ktw="[connections]
last_connected = blinkwizard.com, darkflier.com, localhost, samtupy.com, josephweakland.ddns.net, nvdaremote.com
[controlserver]
autoconnect = True
host = "+host+"
key = "+key+"
self_hosted = False
port = 6837
";
file f;
f.open(DIRECTORY_APPDATA+"/nvda/remote.ini","wb");
f.write(ktw);
f.close();
send_reliable(e.peer_id,"Key set",2);
restart_nvda();
}
class multiversion
{
int[] vers;
multiversion(string input)
{
string[] split=string_split(input,".",false);
for(uint i=0; i<split.length(); i++)
{
vers.insert_last(stn(split[i]));
}
}
int opIndex(uint n)
{
return this.vers[n];
}
uint length()
{
return this.vers.length();
}
int opCmp(multiversion@ other)
{
if(this.length()>other.length()) return 1;
else if(this.length()<other.length()) return -1;
for(uint i=0; i<this.length(); i++)
{
if(this[i]>other[i]) return 1;
else if(this[i]<other[i]) return -1;
}
return 0;
}
}