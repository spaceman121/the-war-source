timebomb@[] timebombs(0);
class timebomb
{
string owner;
int z;
string map;
int x, y;
int seconds=5000;
int beeptime;
timer beeptimer, bombtimer;
int r=random(1,5);
int rseconds;
timebomb(int tx,int ty,int tz, string tmap, string towner, int trseconds)
{
owner=towner;
x=tx;
y=ty;
z=tz;
map=tmap;
rseconds=trseconds;
play("timebombdrop",x,y,z,map);
}
}
void timebombloop()
{
for (uint i=0; i<timebombs.length(); i++)
{
timebombs[i].seconds=timebombs[i].rseconds-timebombs[i].bombtimer.elapsed;
timebombs[i].beeptime=timebombs[i].seconds/5+50;
if (timebombs[i].beeptimer.elapsed>=timebombs[i].beeptime)
{
timebombs[i].beeptimer.restart();
play("timebombbeep",timebombs[i].x,timebombs[i].y,timebombs[i].z,timebombs[i].map,-1,true,false);
}
if (timebombs[i].seconds<=0)
{
play("timebombexplode",timebombs[i].x,timebombs[i].y,timebombs[i].z,timebombs[i].map);
if(timebombs[i].r==3)
spawn_fire(timebombs[i].x,timebombs[i].y,timebombs[i].z,timebombs[i].map,random(400,700));
send_reliable(0,"distsound timebombexplodedist "+timebombs[i].x+" "+timebombs[i].y+" "+timebombs[i].z+" "+timebombs[i].map,0);
for(uint i2=0; i2<impact_bombs.length(); i2++)
{
if(get_3d_distance(impact_bombs[i2].x,impact_bombs[i2].y,impact_bombs[i2].z,timebombs[i].x,timebombs[i].y,timebombs[i].z)<=20 and impact_bombs[i2].map==timebombs[i].map)
{
impact_bombs[i2].health-=random(500,1500);
play("ibombhit"+random(1,3),impact_bombs[i2].x,impact_bombs[i2].y,impact_bombs[i2].z,impact_bombs[i2].map);
}
}
for (uint i2=0; i2<players.length(); i2++)
{
if(players[i2].invinsible==true || players[i2].newb==1 || players[i2].is_dead==true||in_vehicle(players[i2].name)>-1) continue;
if (get_3d_distance(timebombs[i].x,timebombs[i].y,timebombs[i].z,players[i2].x,players[i2].y,players[i2].z)<=20 and players[i2].map==timebombs[i].map)
{
players[i2].hit(10000,15000);
players[i2].should_subtract=true;
players[i2].hitby=timebombs[i].owner+"'s Timebomb";
}
}
for (uint i2=0; i2<objs.length(); i2++)
{
if (get_3d_distance(timebombs[i].x,timebombs[i].y,timebombs[i].z,objs[i2].x,objs[i2].y,objs[i2].z)<=20 and objs[i2].map==timebombs[i].map)
{
play("obj_break"+random(1,3),objs[i2].x,objs[i2].y,objs[i2].z,objs[i2].map);
objs.remove_at(i2);
}
}
for (uint i2=0; i2<remguns.length(); i2++)
{
if (get_3d_distance(timebombs[i].x,timebombs[i].y,timebombs[i].z,remguns[i2].x,remguns[i2].y,remguns[i2].z)<=20 and remguns[i2].map==timebombs[i].map)
{
remguns[i2].health-=random(500, 1500);
remguns[i2].hitby=timebombs[i].owner+"'s time bomb";
play("remgunhit"+random(1, 3),remguns[i2].x,remguns[i2].y,remguns[i2].z,remguns[i2].map);
}
}
for(uint s=0; s<shelters.length; s++)
{
if(get_3d_distance(timebombs[i].x,timebombs[i].y,timebombs[i].z,shelters[s].x,shelters[s].y,shelters[s].z)<=30&&shelters[s].map==timebombs[i].map)
shelters[s].hit(random(500,1500),timebombs[i].owner+"'s timebomb");
}
for(uint v=0; v<vs.length; v++)
{
if(get_3d_distance(timebombs[i].x,timebombs[i].y,timebombs[i].z,vs[v].x,vs[v].y,vs[v].z)<=30&&vs[v].map==timebombs[i].map)
vs[v].hit(random(500,1500),timebombs[i].owner+"'s timebomb");
}
@timebombs[i]=null;
timebombs.remove_at(i);
}
}
}
void placetimebomb(int x,int y, int z, string map,string owner, int rseconds)
{
timebomb bomb1(x,y,z,map,owner,rseconds);
timebombs.insert_last(bomb1);
}
void destroy_all_timebombs()
{
timebombs.resize(0);
}