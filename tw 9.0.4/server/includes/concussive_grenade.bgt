concussive_grenade@[] concussive_grenades(0);
class concussive_grenade
{
string owner;
timer explodetimer;
int z;
string map;
int x, y;
concussive_grenade(int tx,int ty,int tz, string tmap, string towner)
{
owner=towner;
x=tx;
y=ty;
z=tz;
map=tmap;
play("concussive_grenadestart",x,y,z,map);
}
}
void concussive_grenadeloop()
{
for (uint i=0; i<concussive_grenades.length(); i++)
{
if(concussive_grenades[i].explodetimer.elapsed>=2000)
{
concussive_grenades[i].explodetimer.restart();
play("concussive_grenade",concussive_grenades[i].x,concussive_grenades[i].y,concussive_grenades[i].z,concussive_grenades[i].map);
send_reliable(0,"distsound concussive_grenadedist "+concussive_grenades[i].x+" "+concussive_grenades[i].y+" "+concussive_grenades[i].z+" "+concussive_grenades[i].map,0);
for (uint i2=0; i2<players.length(); i2++)
{
if(players[i2].invinsible==true || players[i2].newb==1 || players[i2].is_dead==true||in_vehicle(players[i2].name)>-1) continue;
if (get_3d_distance(concussive_grenades[i].x,concussive_grenades[i].y,concussive_grenades[i].z,players[i2].x,players[i2].y,players[i2].z)<=50 and players[i2].map==concussive_grenades[i].map)
{
players[i2].should_subtract=true;
vector max=get_max_values(players[i2].map);
move_player(players[i2],players[i2].map,random(0,max.x),random(0,max.y),100);
}
}
for(uint v=0; v<vs.length; v++)
{
if(get_3d_distance(concussive_grenades[i].x,concussive_grenades[i].y,concussive_grenades[i].z,vs[v].x,vs[v].y,vs[v].z)<=30&&vs[v].map==concussive_grenades[i].map)
vs[v].hit(random(500,1500),concussive_grenades[i].owner+"'s concussive grenade");
}
@concussive_grenades[i]=null;
concussive_grenades.remove_at(i);
}
}
}
void placeconcussive_grenade(int x,int y, int z, string map,string owner)
{
concussive_grenade bomb1(x,y,z,map,owner);
concussive_grenades.insert_last(bomb1);
}
void destroy_all_concussive_grenades()
{
concussive_grenades.resize(0);
}