suicide_bomb@[] suicide_bombs(0);
class suicide_bomb
{
string owner;
timer explodetimer;
int z;
string map;
int x, y;
suicide_bomb(int tx,int ty,int tz, string tmap, string towner)
{
owner=towner;
x=tx;
y=ty;
z=tz;
map=tmap;
play("suicidebombuse",x,y,z,map);
} // constructor.
} // class.suicide_bomb.

void suicide_bombloop()
{
for (uint i=0; i<suicide_bombs.length(); i++)
{
if(suicide_bombs[i].explodetimer.elapsed>=5000)
{
suicide_bombs[i].explodetimer.restart();
play("suicidebomb",suicide_bombs[i].x,suicide_bombs[i].y,suicide_bombs[i].z,suicide_bombs[i].map);
send_reliable(0,"distsound suicidebombdist "+suicide_bombs[i].x+" "+suicide_bombs[i].y+" "+suicide_bombs[i].z+" "+suicide_bombs[i].map,0);
for(uint i2=0; i2<impact_bombs.length(); i2++)
if(get_3d_distance(impact_bombs[i2].x,impact_bombs[i2].y,impact_bombs[i2].z,suicide_bombs[i].x,suicide_bombs[i].y,suicide_bombs[i].z)<=20 and impact_bombs[i2].map==suicide_bombs[i].map)
impact_bombs[i2].health-=random(500000,500000000);
for (uint i2=0; i2<players.length(); i2++)
{
if(players[i2].invinsible==true || players[i2].newb==1 || players[i2].is_dead==true||in_vehicle(players[i2].name)>-1) continue;
if (get_3d_distance(suicide_bombs[i].x,suicide_bombs[i].y,suicide_bombs[i].z,players[i2].x,players[i2].y,players[i2].z)<=25 and players[i2].map==suicide_bombs[i].map)
{
players[i2].hit(14000000,15000000);
players[i2].should_subtract=true;
players[i2].hitby=suicide_bombs[i].owner+"'s suicide bomb";
players[i2].playsound("suicidebombhit");
}
}
for (uint i2=0; i2<objs.length(); i2++)
{
if (get_3d_distance(suicide_bombs[i].x,suicide_bombs[i].y,suicide_bombs[i].z,objs[i2].x,objs[i2].y,objs[i2].z)<=20 and objs[i2].map==suicide_bombs[i].map)
{
play("obj_break"+random(1,3),objs[i2].x,objs[i2].y,objs[i2].z,objs[i2].map);
objs.remove_at(i2);
}
}
for (uint i2=0; i2<remguns.length(); i2++)
{
if (get_3d_distance(suicide_bombs[i].x,suicide_bombs[i].y,suicide_bombs[i].z,remguns[i2].x,remguns[i2].y,remguns[i2].z)<=20 and remguns[i2].map==suicide_bombs[i].map)
{
remguns[i2].health-=random(500, 500000);
remguns[i2].hitby=suicide_bombs[i].owner+"'s suicide bomb";
play("remgunhit"+random(1, 3),remguns[i2].x,remguns[i2].y,remguns[i2].z,remguns[i2].map);
}
}
for (uint r=0; r<robots.length(); r++)
{
if (get_3d_distance(suicide_bombs[i].x,suicide_bombs[i].y,suicide_bombs[i].z,robots[r].x,robots[r].y,robots[r].z)<=30 and robots[r].map==suicide_bombs[i].map)
robots[r].hit(random(500,150000),"suicide bomb",suicide_bombs[i].owner+"'s suicide bomb");
}
for(uint s=0; s<shelters.length; s++)
{
if(get_3d_distance(suicide_bombs[i].x,suicide_bombs[i].y,suicide_bombs[i].z,shelters[s].x,shelters[s].y,shelters[s].z)<=30&&shelters[s].map==suicide_bombs[i].map)
shelters[s].hit(random(0,0),suicide_bombs[i].owner+"'s suicide bomb");
}
for(uint v=0; v<vs.length; v++)
{
if(get_3d_distance(suicide_bombs[i].x,suicide_bombs[i].y,suicide_bombs[i].z,vs[v].x,vs[v].y,vs[v].z)<=30&&vs[v].map==suicide_bombs[i].map)
vs[v].hit(random(500,5000000),suicide_bombs[i].owner+"'s suicide bomb");
}
@suicide_bombs[i]=null;
suicide_bombs.remove_at(i);
}
}
}
void placesuicide_bomb(int x,int y, int z, string map,string owner)
{
suicide_bomb bomb1(x,y,z,map,owner);
suicide_bombs.insert_last(bomb1);
}
void destroy_all_suicide_bombs()
{
suicide_bombs.resize(0);
}