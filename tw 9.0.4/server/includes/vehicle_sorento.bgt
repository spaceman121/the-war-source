class sorento : vehicle
{
sorento(int pind)
{
super("sorento",pind);
health=players[pind].sorentohealth;
fuel=players[pind].sorentofuel;
fueltime=16873;
firetime=7000;
soundtime=sorentospawn;soundtimer.restart();
vmovetime=1000;
vfueltime=100;
}
void command(string cmd,bool force=false)
{
int index=get_player_index_from(owner);
if(soundtimer.elapsed<soundtime&&(!updatingsvr&&!force)) return;
if(force==false&&updatingsvr) return;
if(fuel<=0 and (cmd!="escape"&&cmd!="repair")) return;
if(cmd!="repair") playint(type+"_command",owner);
if(cmd=="repair")
{
if(speed>0)
{
sendint("speak your vehicle must be off to receive repairs.",owner);
return;
}
sendint("speak just a sec...",owner);
soundtime=repair;
soundtimer.restart();
playsound("vehicle_repair",true,false);
doing="repair";
}
if(cmd=="enter")
{
doing=(speed==0 ? "start" : "stop");
if(doing=="stop"&&speed>1&&!force)
{
sendint("speak your "+type+" must be idling before it can be shut off",owner);
return;
}
if(doing=="start") soundtime=sorentostart;
if(doing=="stop") soundtime=sorentostop;
if(doing=="start" ) lowfuel=false;
if(doing=="stop")
{
destroy_moving_sound(mid);
mid="";
sendint("vestop",owner);
sendint("goodfuel",owner);
}
soundtimer.restart();
playsound(type+"_"+doing);
speed=(speed==0 ? 1 : 0);
return;
}
if(cmd=="firegun"&&firetimer.elapsed>=firetime and map!="store" and speed>0)
{
doing="prefire";
soundtimer.restart();
playint("sorento_artillery_beforeshot",owner);
return;
}
else if(cmd=="escape")
{
if(speed!=0)
{
sendint("speak you cannot exit your vehicle until it is completely off", owner);
return;
}
sendint("veunspawn",owner);
play(type+"_unspawn",x,y,z,map);
int index=get_player_index_from(owner);
if(index>-1)
{
players[index].sorentohealth=health;
players[index].sorentofuel=fuel;
}
remove=true;
}
else if(cmd=="speedup"&&speed<10&&speed>0)
{
speed++;
movetime=vmovetime-((speed-1)*100);
double pi=100;
double inc=10;
pi+=inc*(speed-2);
update_moving_sound(mid,x,y,z,pi);
this.pitch=pi;
sendint("vepitch "+pitch,owner);
}
else if(cmd=="speeddown"&&speed>1)
{
speed--;
movetime=vmovetime-((speed-1)*100);
double pi=100;
double inc=5;
pi+=inc*(speed-2);
update_moving_sound(mid,x,y,z,pi);
this.pitch=pi;
sendint("vepitch "+pitch,owner);
}
else if(cmd=="turnleft"&&speed>0)
{
facing=snapleft(facing,getdir(facing),45);
int index=get_player_index_from(owner);
if(index>-1) players[index].facing=facing;
sendint("facing "+facing,owner);
sendint("speak facing "+dir_to_string(getdir(facing)),owner);
playsound(type+"_turn",true,false);
}
else if(cmd=="turnright"&&speed>0)
{
facing=snapright(facing,getdir(facing),45);
int index=get_player_index_from(owner);
if(index>-1) players[index].facing=facing;
sendint("facing "+facing,owner);
sendint("speak facing "+dir_to_string(getdir(facing)),owner);
playsound(type+"_turn",true,false);
}
}
void loop()
{
netloop();
if(get_player_index_from(owner)<0) remove=true;
if(health<=0)
{
sendint("vestop",owner);
sendint("veunspawn",owner);
int index=get_player_index_from(owner);
play(type+"_die",x,y,z,map);
send_plus(index,"distsound vehicle_die_dist "+x+" "+y+" "+z+" "+map,0);
remove=true;
string hb=hitby;
if(string_contains(hb,"'",1)>-1) hb=string_left(hb,string_contains(hb,"'",1));
int k=get_player_index_from(hb);
if(index>-1)
{
players[index].sorentofuel=100;
players[index].sorentohealth=800000;
players[index].give(type,-1);
string km=killmsg(players[index].name+"'s "+type,hitby,players[index].zone);
send_reliable(0,"playerdeath "+km,0);
players[index].health-=random(20000, 50000);
players[index].hitby="internal:vehicle:"+type;
}
}
if(doing!=""&&soundtimer.elapsed>=soundtime)
{
if(doing=="repair")
{
health=(type=="sorento" ? 800000 : 15000);
sendint("speak your "+type+" has been repaired!",owner);
}
if(doing=="start")
{
int pitch=50;
mid=spawn_moving_sound(type+"_engine_ext.ogg",x,y,z,map,owner,pitch);
this.pitch=pitch;
sendint("vestart "+type+"_engine_int.ogg "+pitch,owner);
sendint("move "+x+" "+y+" "+z,owner);
int index=get_player_index_from(owner);
if(index>-1) {players[index].x=x;players[index].y=y;players[index].z=z;}
}
if(doing=="stop")
{
sendint("move "+x+" "+y+" "+z,owner);
int index=get_player_index_from(owner);
if(index>-1) {players[index].x=x;players[index].y=y;players[index].z=z;}
}
if(doing=="prefire")
{
firetimer.restart();
int rand=random(1,4);
send_plus(get_player_index_from(owner),"distsound sorento_artillery_fire_dist "+x+" "+y+" "+z+" "+map,0);
playext("sorento_artillery_fire"+rand+"_ext",x,y,z,map,owner);
playint("sorento_artillery_fire"+rand+"_int",owner);
spawn_weapon(x,y,z,facing,"artillery",map,players[get_player_index_from(owner)]);
}
doing="";
}
if(fueltimer.elapsed>=(fueltime-(vfueltime*(speed-1)))&&speed>0)
{
fuel-=0.1;
fuel=round(fuel,1);
fueltimer.restart();
}
if(fuel<=2.5&&lowfuel==false&&speed>0)
{
lowfuel=true;
sendint("lowfuel",owner);
}
if(fuel<=0&&doing!="fall"&&speed>0)
{
sendint("goodfuel",owner);
sendint("vestop",owner);
destroy_moving_sound(mid);
playext("sorento_stop_ext",x,y,z,map,owner);
playint("sorento_stop_int",owner);
mid="";
speed=0;
}
string tile=get_tile_at(x,y,z,map);
if(falling&&falltimer.elapsed>=70)
{
falltimer.restart();
if(tile=="")
{
z--;
falldist++;
update_moving_sound(mid,x,y,z,pitch);
int index=get_player_index_from(owner);
if(index>-1)
{
players[index].x=x;
players[index].y=y;
players[index].z=z;
send_reliable(players[index].peer_id,"move "+x+" "+y+" "+z,0);
}
}
else
{
falling=false;
hit(falldist*random(180,300),"gravity","artillery");
falldist=0;
}
}
if(movetimer.elapsed>=movetime&&soundtimer.elapsed>=soundtime&&speed>1&&!falling)
{
movetimer.restart();
vector m=move(x,y,facing);
x=m.x;y=m.y;
if(x<0) x=0;
if(y<0) y=0;
if(x>max.x) x=max.x;
if(y>max.y) y=max.y;
if(tile=="" and not falling)
{
falling=true;
falldist=0;
falltimer.restart();
}
update_moving_sound(mid,x,y,z,pitch);
int index=get_player_index_from(owner);
if(index>-1)
{
players[index].x=x;
players[index].y=y;
players[index].z=z;
send_reliable(players[index].peer_id,"move "+x+" "+y+" "+z,0);
}
}
if(fuel>2.5&&lowfuel)
{
lowfuel=false;
sendint("goodfuel",owner);
}
}
}