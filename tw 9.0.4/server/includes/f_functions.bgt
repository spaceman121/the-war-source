library filelib;
float file_date(string filename, int type)
{
dictionary a=filelib.call("float FDM(char*, int);", filename, type);
float b;
a.get(0,b);
return b;
}
float timestamp()
{
dictionary a=filelib.call("float TS();");
float b;
a.get(0,b);
return b;
}
string get_relative_time(float time1, float time2=timestamp())
{
float r=time2-time1;
float r2=r;
r2=round(r2,0);
if (r2<60)
{
return "Just now";
}
else
{
float r3=r2/60;
r3=round(r3,0);
if (r3<60)
{
if (r3==1)
return "a minute ago";
else
return r3+" minutes ago";
}
else
{
float r4=r3/60;
r4=round(r4,0);
if (r4<24)
{
if (r4==1)
return "an hour ago";
else
return r4+" hours ago";
}
else
{
float r5=r4/24;
r5=round(r5,0);
if (r5<7)
{
if (r5==1)
return "a day ago";
else
return r5+" days ago";
}
else
{
float r6=r5/7;
r6=round(r6,0);
if (r6==1)
return "a week ago";
else
return r6+" weeks ago";
}
}
}
}
}
string[] find_files_plus(string folder, string stuff, int type)
{
string[] a=find_files(folder+"/"+stuff);
string[] b;
for (uint i=0; i<a.length(); i++)
{
b.insert_last(file_date(folder+"/"+a[i],type)+"::"+i);
}
b.sort_descending();
string[] d;
for (uint i=0; i<b.length(); i++)
{
string[] c=string_split(b[i],"::",true);
d.insert_last(a[string_to_number(c[1])]);
}
return d;
}