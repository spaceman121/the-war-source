class prowl
{
private http h;
private string address="http://prowlapp.com/publicapi/";
private string apikey;
private string providerkey;
private string data;
private string content;
prowl(string apikey, string providerkey="")
{
this.apikey=apikey;
this.providerkey=providerkey;
}
string verify(string apikey="", string providerkey="") //in case you would want to test another key for some reason
{
if(apikey!="")
{
data="verify?apikey="+apikey;
}
else if(this.apikey!="")
{
data="verify?apikey="+this.apikey;
}
else return "no apikey provided";
if(providerkey!="")
{
data+="&providerkey="+providerkey;
}
else if(this.providerkey!="")
{
data+="&providerkey="+providerkey;
}
return get_content(data);
}
string post(string application, string event, string description, string url="", string providerkey="", int priority=0)
{
if(providerkey=="")
{
providerkey=this.providerkey;
}
if(application==""||application.length()>256) return "invalid application";
if(event==""||event.length()>1024) return "invalid event";
if(description==""||description.length()>10000) return "description required";
data="add?apikey="+this.apikey+(providerkey!=""&&providerkey.length()==40?"&providerkey="+providerkey:"")+(priority==-2||priority==-1||priority==0||priority==1||priority==2?"&&priority="+priority:"")+(url!=""&&url.length()<=512?"&url="+url:"")+"&application="+application+"&event="+event+"&description="+description;
data=url_encode(data);
data=string_replace(data, "%3a", ":", true);
data=string_replace(data,"%3f","?",true);
data=string_replace(data,"%3d","=",true);
data=string_replace(data,"%26","&",true);
data=string_replace(data, "%2f", "/", true);
return get_content(data);
}
string get_content(string data)
{
if(string_left(data,6)=="verify")
{
content=url_get(address+data);
}
else
{
content=url_post(address+string_left(data,string_contains(data,"?",1)),string_trim_left(data,string_contains(data,"?",1)+1));
}
return content;
}
private string evaluate_response(string code)
{
if(code=="200") return "success";
if(code=="400") return "bad request";
if(code=="401") return "API key is not valid";
if(code=="406") return "exceeded API limit";
if(code=="409") return "request not approved";
if(code=="500") return "internal server error";
else return "unknown error";
}
string get_response(string the_string)
{
string response_code;
if(string_contains(the_string,"<success code",1)!=-1)
{
response_code=string_trim_left(the_string,string_contains(the_string,"<success code=\"",1)+15);
response_code=string_left(response_code,string_contains(response_code,"\"",1));
}
else if(string_contains(the_string,"<error code",1)!=-1)
{
response_code=string_trim_left(the_string,string_contains(the_string,"<error code=\"",1)+15);
response_code=string_left(response_code,string_contains(response_code,"\"",1));
}
else
{
return "error parsing response";
}
return evaluate_response(response_code);
}
string get_remaining(string the_string)
{
string response;
if(string_contains(the_string,"remaining",1)!=-1)
{
response=string_trim_left(the_string,string_contains(the_string,"remaining=\"",1)+11);
response=string_left(response,string_contains(response,"\"",1));
}
else return "unable to get remaining";
return response;
}
}