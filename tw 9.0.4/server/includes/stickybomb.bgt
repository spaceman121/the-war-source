stickybomb@[]stickybombs(0);
class stickybomb 
{
double x,y,z;
int dir=0;
bool explode=false;
timer explodetimer;
int range=60;
int distance=0;
int mindammage=5000;
int maxdammage=7500;
string map;
string owner;
string stickyplayer;
stickybomb(double sx, double sy, double sz, double sdir, string smap, string sowner,string splayer)
{
x=sx;
y=sy;
z=sz;
dir=sdir;
map=smap;
owner=sowner;
stickyplayer=splayer;
play("stickybombstick",x,y,z,map);
}
void update()
{
int index=get_player_index_from(owner);
if(index<0)
{
stickyplayer="";
}
if(players[index].x!=x)
x=players[index].x;
else if(players[index].y!=y)
y=players[index].y;
else if(players[index].z!=z)
z=players[index].z;
}
}
void stickybombloop()
{
for(uint j=0; j<stickybombs.length(); j++)
{
int pindex=get_player_index_from(stickybombs[j].stickyplayer);
if(pindex>-1)
stickybombs[j].update();
if(stickybombs[j].explodetimer.elapsed>=5000)
{
stickybombs[j].explodetimer.restart();
play("stickybomb",stickybombs[j].x,stickybombs[j].y,stickybombs[j].z,stickybombs[j].map);
send_reliable(0,"distsound stickybombdist "+stickybombs[j].x+" "+stickybombs[j].y+" "+stickybombs[j].z+" "+stickybombs[j].map,0);
for(uint s=0; s<shelters.length; s++)
{
if(get_3d_distance(stickybombs[j].x,stickybombs[j].y,stickybombs[j].z,shelters[s].x,shelters[s].y,shelters[s].z)<=stickybombs[j].range&&shelters[s].map==stickybombs[j].map)
shelters[s].hit(random(stickybombs[j].mindammage,stickybombs[j].maxdammage),stickybombs[j].owner+"'s sticky bomb");
}
for(uint x=0; x<players.length(); x++)
{
if(in_vehicle(players[x].name)>-1 or players[x].newb==1 or players[x].is_dead or players[x].invinsible) continue;
if(get_3d_distance(stickybombs[j].x,stickybombs[j].y,stickybombs[j].z,players[x].x,players[x].y,players[x].z)<=10 and players[x].map==stickybombs[j].map)
{
players[x].playsound("hit"+random(1,3));
players[x].health-=random(stickybombs[j].mindammage,stickybombs[j].maxdammage);
players[x].should_subtract=true;
players[x].hitby=stickybombs[j].owner+"'s sticky bomb";
}
}
for (uint i2=0; i2<objs.length(); i2++)
{
if (get_3d_distance(stickybombs[j].x,stickybombs[j].y,stickybombs[j].z,objs[i2].x,objs[i2].y,objs[i2].z)<=10 and objs[i2].map==stickybombs[j].map)
{
play("obj_break"+random(1,3),objs[i2].x,objs[i2].y,objs[i2].z,objs[i2].map);
objs.remove_at(i2);
}
}
for (uint i2=0; i2<remguns.length(); i2++)
{
if (get_3d_distance(stickybombs[j].x,stickybombs[j].y,stickybombs[j].z,remguns[i2].x,remguns[i2].y,remguns[i2].z)<=200 and remguns[i2].map==stickybombs[j].map)
{
remguns[i2].health-=random(1000,3000);
remguns[i2].hitby=stickybombs[j].owner+"'s stickybomb";
play("remgunhit"+random(1, 3),remguns[i2].x,remguns[i2].y,remguns[i2].z,remguns[i2].map);
}
}
for(uint v=0; v<vs.length; v++)
{
if(get_2d_distance(vs[v].x,vs[v].y,stickybombs[j].x,stickybombs[j].y)<=10)
{
vs[v].hit(random(stickybombs[j].mindammage,stickybombs[j].maxdammage),stickybombs[j].owner+"'s sticky bomb");
}
}
for(uint x=0; x<impact_bombs.length(); x++)
{
if(get_3d_distance(stickybombs[j].x,stickybombs[j].y,stickybombs[j].z,impact_bombs[x].x,impact_bombs[x].y,impact_bombs[x].z)<=20 and stickybombs[j].map==impact_bombs[x].map)
{
play("ibombhit"+random(1,3),impact_bombs[x].x,impact_bombs[x].y,impact_bombs[x].z,impact_bombs[x].map);
impact_bombs[x].health-=random(stickybombs[j].mindammage,stickybombs[j].maxdammage);
}
}
stickybombs.remove_at(j);
continue;
}
}
}
void spawn_stickybomb(double x, double y, double z, double dir, string map, string owner,string stickyplayer)
{
stickybomb f1(x, y, z, dir, map, owner,stickyplayer);
stickybombs.insert_last(f1);
}
int has_stickybomb(string name)
{
for(uint i=0; i<stickybombs.length(); i++)
{
if(stickybombs[i].stickyplayer==name)
{
return i;
}
}
return -1;
}
