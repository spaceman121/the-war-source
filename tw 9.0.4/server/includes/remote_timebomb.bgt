remote_timebomb@[] remote_timebombs(0);
class remote_timebomb
{
string owner;
int z,code;
string map;
int x, y;
int seconds=2000;
int beeptime;
timer beeptimer, bombtimer;
int r=random(1,2);
bool d=false;
remote_timebomb(int rtx,int rty,int rtz, string rtmap, string rtowner,int rcode)
{
owner=rtowner;
x=rtx;
y=rty;
z=rtz;
map=rtmap;
code=rcode;
play("remote_timebombplace",x,y,z,map);
}
}
void remote_timebombloop()
{
for (uint i=0; i<remote_timebombs.length(); i++)
{
if(remote_timebombs[i].d==true)
{
remote_timebombs[i].seconds=2000-remote_timebombs[i].bombtimer.elapsed;
if (remote_timebombs[i].seconds<=0)
{
play("remote_timebombexplode",remote_timebombs[i].x,remote_timebombs[i].y,remote_timebombs[i].z,remote_timebombs[i].map);
//if(remote_timebombs[i].r==2)
//spawn_fire(remote_timebombs[i].x,remote_timebombs[i].y,remote_timebombs[i].z,remote_timebombs[i].map,random(400,700));
send_reliable(0,"distsound remote_timebombexplode_dist "+remote_timebombs[i].x+" "+remote_timebombs[i].y+" "+remote_timebombs[i].z+" "+remote_timebombs[i].map,0);
for(uint i2=0; i2<impact_bombs.length(); i2++)
{
if(get_3d_distance(impact_bombs[i2].x,impact_bombs[i2].y,impact_bombs[i2].z,remote_timebombs[i].x,remote_timebombs[i].y,remote_timebombs[i].z)<=30 and impact_bombs[i2].map==remote_timebombs[i].map)
{
impact_bombs[i2].health-=random(500,1500);
play("ibombhit"+random(1,3),impact_bombs[i2].x,impact_bombs[i2].y,impact_bombs[i2].z,impact_bombs[i2].map);
}
}
for (uint i2=0; i2<players.length(); i2++)
{
if(players[i2].invinsible==true || players[i2].is_dead==true||in_vehicle(players[i2].name)>-1) continue;
if (get_3d_distance(remote_timebombs[i].x,remote_timebombs[i].y,remote_timebombs[i].z,players[i2].x,players[i2].y,players[i2].z)<=30 and players[i2].map==remote_timebombs[i].map)
{
players[i2].hit(2000,4000);
players[i2].should_subtract=false;
players[i2].hitby=remote_timebombs[i].owner+"'s remote timebomb";
}
}
for (uint i2=0; i2<objs.length(); i2++)
{
if (get_3d_distance(remote_timebombs[i].x,remote_timebombs[i].y,remote_timebombs[i].z,objs[i2].x,objs[i2].y,objs[i2].z)<=30 and objs[i2].map==remote_timebombs[i].map)
{
play("obj_break"+random(1,3),objs[i2].x,objs[i2].y,objs[i2].z,objs[i2].map);
objs.remove_at(i2);
}
}
for (uint i2=0; i2<remguns.length(); i2++)
{
if (get_3d_distance(remote_timebombs[i].x,remote_timebombs[i].y,remote_timebombs[i].z,remguns[i2].x,remguns[i2].y,remguns[i2].z)<=30 and remguns[i2].map==remote_timebombs[i].map)
{
remguns[i2].health-=random(500, 1500);
remguns[i2].hitby=remote_timebombs[i].owner+"'s remote timebomb";
play("remgunhit"+random(1, 3),remguns[i2].x,remguns[i2].y,remguns[i2].z,remguns[i2].map);
}
}
for(uint s=0; s<shelters.length; s++)
{
if(get_3d_distance(remote_timebombs[i].x,remote_timebombs[i].y,remote_timebombs[i].z,shelters[s].x,shelters[s].y,shelters[s].z)<=30&&shelters[s].map==remote_timebombs[i].map)
shelters[s].hit(random(500,1500),remote_timebombs[i].owner+"'s remote timebomb");
}
for(uint v=0; v<vs.length; v++)
{
if(get_3d_distance(remote_timebombs[i].x,remote_timebombs[i].y,remote_timebombs[i].z,vs[v].x,vs[v].y,vs[v].z)<=30&&vs[v].map==remote_timebombs[i].map)
vs[v].hit(random(500,1500),remote_timebombs[i].owner+"'s remote timebomb");
}
int index=get_player_index_from(remote_timebombs[i].owner);
if(index>-1)
{
players[index].rbombs-=1;
}
remote_timebombs.remove_at(i);
}
}
}
}
void place_remote_timebomb(int x,int y, int z, string map,string owner, int code)
{
remote_timebomb bomb1(x,y,z,map,owner,code);
remote_timebombs.insert_last(bomb1);
}
void destroy_all_remote_timebombs()
{
remote_timebombs.resize(0);
}
void create_remote_timebomb_from_datastream(string data)
{
dictionary d=deserialize(data);
int x=dget_int(d,"x"),y=dget_int(d,"y"),z=dget_int(d,"z"),code=dget_int(d,"code");
string map=dget_string(d,"map"),owner=dget_string(d,"owner");
remote_timebomb m1(x,y,z,map,owner,code);
remote_timebombs.insert_last(m1);
}
void create_remote_timebomb_array_from_datastream(string stream)
{
dictionary@ temp=deserialize(stream);
string[] keys=temp.get_keys();
for(uint i=0; i<keys.length; i++)
{
string val=dget_string(temp,keys[i]);
create_remote_timebomb_from_datastream(val);
}
@temp=null;
}
string[] create_datastream_from_remote_timebomb(remote_timebomb@ m)
{
dictionary d;
d.set("x",m.x);d.set("y",m.y);d.set("z",m.z);d.set("owner",m.owner);d.set("map",m.map);d.set("code",m.code);
string[] ret(2);
ret[0]=randomstring(5);
ret[1]=serialize(d);
return ret;
}
string create_datastream_from_remote_timebomb_array()
{
dictionary d;
for(uint i=0; i<remote_timebombs.length; i++)
{
string[] r=create_datastream_from_remote_timebomb(remote_timebombs[i]);
d.set(r[0],r[1]);
}
return serialize(d);
}